@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    string _title = Model.Title;
    string _titleX = Model.TitleX;
    string _titleY = Model.TitleY;
    dynamic _data = Model.Data;
}

@section css{
    <style>
        .highcharts-figure,
        .highcharts-data-table table {
            min-width: 360px;
            max-width: 800px;
            margin: 1em auto;
        }

        .highcharts-data-table table {
            font-family: Verdana, sans-serif;
            border-collapse: collapse;
            border: 1px solid #ebebeb;
            margin: 10px auto;
            text-align: center;
            width: 100%;
            max-width: 500px;
        }

        .highcharts-data-table caption {
            padding: 1em 0;
            font-size: 1.2em;
            color: #555;
        }

        .highcharts-data-table th {
            font-weight: 600;
            padding: 0.5em;
        }

        .highcharts-data-table td,
        .highcharts-data-table th,
        .highcharts-data-table caption {
            padding: 0.5em;
        }

        .highcharts-data-table thead tr,
        .highcharts-data-table tr:nth-child(even) {
            background: #f8f8f8;
        }

        .highcharts-data-table tr:hover {
            background: #f1f7ff;
        }

    </style>
}

<figure class="highcharts-figure">
    <div id="container"></div>
    <p class="highcharts-description">
        Highcharts has extensive support for time series, and will adapt
        intelligently to the input data. Click and drag in the chart to zoom in
        and inspect the data.
    </p>
</figure>

@section scripts{
    <script>

        const _title = @(Html.Raw(JsonConvert.SerializeObject(_title)))
        const _titleX = @(Html.Raw(JsonConvert.SerializeObject(_titleX)))
        const _titleY = @(Html.Raw(JsonConvert.SerializeObject(_titleY)))
        const _data = @(Html.Raw(JsonConvert.SerializeObject(_data)))

    console.log(_data);
            Highcharts.chart("container", {
                chart: {
                    zoomType: "x",
                },
                title: {
                    text: _title,
                    align: "left",
                },
                subtitle: {
                    text:
                        document.ontouchstart === undefined
                            ? "Click and drag in the plot area to zoom in"
                            : "Pinch the chart to zoom in",
                    align: "left",
                },
                xAxis: {
                    title: {
                        text: _titleX,
                    },
                    type: "datetime",
                },
                yAxis: {
                    title: {
                        text: _titleY,
                    },
                },
                legend: {
                    enabled: false,
                },
                plotOptions: {
                    area: {
                        fillColor: {
                            linearGradient: {
                                x1: 0,
                                y1: 0,
                                x2: 0,
                                y2: 1,
                            },
                            stops: [
                                [0, Highcharts.getOptions().colors[0]],
                                [
                                    1,
                                    Highcharts.color(Highcharts.getOptions().colors[2])
                                        .setOpacity(0)
                                        .get("rgba"),
                                ],
                            ],
                        },
                        marker: {
                            radius: 2,
                        },
                        lineWidth: 1,
                        states: {
                            hover: {
                                lineWidth: 1,
                            },
                        },
                        threshold: null,
                    },
                },

                series: [
                    {
                        type: "area",
                        name: "USD to EUR",
                        data: _data,
                    },
                ],
            });

    </script>
}